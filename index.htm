<html>
<head>
  <meta charset=utf-8 />
  <title>DVRPC - 2010 Landuse</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />

  <!-- Load Leaflet from CDN-->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/leaflet/1.0.0-beta.2/leaflet.css" />
  <script src="https://cdn.jsdelivr.net/leaflet/1.0.0-beta.2/leaflet.js"></script>
    <!-- Core CSS -->
  <link href="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet" type="text/css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">

  <!-- Load Esri Leaflet from CDN -->
   <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
  <script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
  <script type="text/javascript" src="http://netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/leaflet.esri/2.0.0-beta.8/esri-leaflet.js"></script>
  <script src="http://code.highcharts.com/highcharts.js"></script>  
  <script src="js/numeral.js"></script>


  <style>
    body { margin:0; padding:0; }
    #map { position: absolute; top:0; bottom:0; right:0; left:0; }
    #legendBox {
    position: absolute;
    background:white;
    height:250px;
    width:610px;
    top: 20px;
    right: 20px;
    z-index: 1001;
    border: 1px solid #000;
    border-radius: 5px;
  /*  padding: 10px 20px; */
    box-shadow: 10px 10px 65px 0px rgba(0, 0, 0, 0.75);
    }
    #download_button{
      margin-left:80px;
    }
    .legend-icons {
    display: inline-block;
    line-height: 25px;
    width: 25px;
    height: 15px;
    text-align: center;
 /*   vertical-align: middle; */
   /* margin: 0px 6px 0px 0px; */
    }
    .civic{
      color: #FFFF00;
    }
    .cultural{
      color: #FFA77F;
    }
    .fb{
      color: #FF0000;
    }
    .gafo{
      color: #BEE8FF;
    }
    .ngs{
      color: #AA66CD;
    }
    .office{
      color: #686868;
    }
    .res{
      color: #FFBEBE;
    }
    .vacant{
      color: #A80000;
    }
        
  </style>
</head>
<body>

<div id="map">
<div id="legendBox">
<!-- <div id="infosidebar"style="padding:10px"></div> -->
<span>
<div id="Chart1" style="display:inline-block;"></div>    
<div id="Chart2" style="display:inline-block;"></div> 
</span>
<span>
  <i class="fa fa-circle legend-icons civic"></i>Civic
  <i class="fa fa-circle legend-icons cultural"></i>Cultural
  <i class="fa fa-circle legend-icons fb"></i>Food & Beverage
  <i class="fa fa-circle legend-icons gafo"></i>GAFO
  <i class="fa fa-circle legend-icons ngs"></i>NG & S
  <i class="fa fa-circle legend-icons office"></i>Office
  <i class="fa fa-circle legend-icons res"></i>Residential
  <i class="fa fa-circle legend-icons vacant"></i>Vacant 
</span>
<!-- Contextual button for informational alert messages -->
<!-- <div id="download_button"></div> -->
</div>
</div>

<script>
   var map = L.map('map', {
            zoom: 9,
            minZoom:8,
            maxZoom:17,
            center: new L.LatLng(39.97, -75.16),
      });

  googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',{
  maxZoom: 20,
  subdomains:['mt0','mt1','mt2','mt3']
  }).addTo(map);


 /* var landuse = L.esri.dynamicMapLayer({
    url: 'http://arcgis.dvrpc.org/arcgis/rest/services/Planning/LandUse2010/MapServer'
  }).addTo(map);

  landuse.bindPopup(function (error, featureCollection) {
    if(error || featureCollection.features.length === 0) {
      return false;
    } else {
      return 'Land Use: ' + featureCollection.features[0].properties.LU_LABEL;
    }
  }); */
   ///////Load MAP JSONS

    var lsoaLayer;
    
    function highlightFeature(e) {
      var layer = e.target;
      layer.setStyle({
        weight: 3,
        color: 'red',
        fillOpacity: 0.0
      });
    }

    function resetHighlight(e) {
     lsoaLayer.resetStyle(e.target);
    }

    function zoomToFeature(e) {
      map.fitBounds(e.target.getBounds());
    }

    function onEachFeature(feature, layer) {
      layer.on({
        mouseover: highlightFeature,
        mouseout: resetHighlight,
        click: populatepie
    //   click: zoomToFeature
      });
    }

  getIMDStyle = function (feature) {
    return {
      color: '#666',
      weight: 0.45,
      opacity: 1,
      fillOpacity: 0.0,
      fillColor: '#D9D9D9'
    }
  },      

  lsoaLayer = L.geoJson(null, {
   style: getIMDStyle,
   onEachFeature: onEachFeature
  });

  $.getJSON('data/districts.js', function (data) {
      lsoaLayer.addData(data);
        });
  map.addLayer(lsoaLayer);
  
  function populatepie(e) {
                $('#target').removeClass("hide");
                resetHighlight(e);
                var layer = e.target;
                var layersearch = e.feature;
                var props = layer.feature.properties;   
                if (layersearch===undefined){  
                    layer.setStyle({ 
                    weight: 3,color:"#00ffff"
                    });
                    
                } else {                        
                    e.setStyle({ 
                    weight: 18,color:"#00ffff"
                    });
                    var props = layersearch.properties;
                }          
          var content = "<div style='text-align:center;width:290px'><b>"+numeral(props.Total).format('0,0')+" total acres</b> within "+(props.District)
          +"</br>"+(props.COUNTY)+" County, "+(props.STATE)
          +"</div>"   
          ;

       /*   var content2 = "<a style='color:#fff;'class='btn btn-primary' role='button' href='http://dvrpc.dvrpcgis.opendata.arcgis.com/datasets/c614fd0ae78a4aeaad319ad2e1007cbf_0?uiTab=table&where=MUN_NAME&#43like&#43"+
          (props.MUN_NAME)+"&filterByExtent=false&geometry="+(props.MIN_Y)+"%2C"+(props.MIN_X)+"%2C"+ (props.MAX_Y)+"%2C"+(props.MAX_X)+"' target='_blank'>Download Dataset</a>" 
          ;
       */   

        //  document.getElementById('infosidebar').innerHTML = content;
         // document.getElementById('download_button').innerHTML = content2;
          
  Retail = [props.CIVIC, props.CULT, props.FB, props.GAFO, props.NGS, props.NONREOFF, props.RESIDE, props.VACANT];
  Retail2 = [props.CIVIC, props.CULT, props.FB, props.GAFO, props.NGS, props.NONREOFF, props.RESIDE, props.VACANT];
  
  updateRetailChart(Retail); 
  updateRetailChart2(Retail2);   
          
  function updateRetailChart(Values){
    var RetailChart = {
        chart: {
            renderTo: 'Chart1',
            type:'pie',
            plotBackgroundColor: null,
            plotBorderWidth: 0, //null,
            plotShadow: true,
            height: 200,
            width: 300,
            colors: ['#FFFF00', '#FFA77F','#FF0000','#BEE8FF','#AA66CD','#686868','#FFBEBE','#A80000']
        },
        title: {
          text: null
        }, 
        plotOptions: {
          pie: {
            //  allowPointSelect: true,
            cursor: 'pointer',
            point:{
              events : {
                legendItemClick: function(e){
                e.preventDefault();
                }
                }
            },
            dataLabels: {
              //   enabled: false
                enabled:true,
                style: '{text-align: center}',
                verticalAlign: 'middle',
                distance: 5,
                format: '<span>{point.percentage:.0f} %</span>',
                filter: {
                property:'percentage',
                operator: '>',
                value: '8'
                },
            },
            showInLegend: false
            }
          },
        tooltip: {
            formatter:function(){
              //  return '<b>'+Highcharts.numberFormat(this.point.y,0,',',',')+' Acres</b><br/>';
                return '<b>'+this.point.name +'</b><br/>'+Highcharts.numberFormat(this.percentage, 2)+' %';
            }
        },
        credits: {
          enabled: false
        },
        series: [{
          name:'Total',
          id: 'Values',
          innerSize: '40%',
          colors: ['#FFFF00', '#FFA77F','#FF0000','#BEE8FF','#AA66CD','#686868','#FFBEBE','#A80000'],
          data: []
        }]
    };    
    var Labels = ["Civic", "Cultural","Food & Beverage","GAFO","NG & S","Office","Residential","Vacant"],
    counData = [];
    for (var i = 0; i < Values.length; i++){
                counData.push({
                    name: Labels[i],
                    y: Values[i]})
            }
    RetailChart.series[0].data = counData;
    var chart2 = new Highcharts.Chart(RetailChart)
    }
  // start second chart
  function updateRetailChart2(Values){
    var RetailChart2 = {
        chart: {
            renderTo: 'Chart2',
            type:'pie',
            plotBackgroundColor: null,
            plotBorderWidth: 0, //null,
            plotShadow: true,
            height: 200,
            width: 300,
            colors: ['#FFFF00', '#FFA77F','#FF0000','#BEE8FF','#AA66CD','#686868','#FFBEBE','#A80000']
        },
        title: {
          text: null
        }, 
        plotOptions: {
          pie: {
            //  allowPointSelect: true,
            cursor: 'pointer',
            point:{
              events : {
                legendItemClick: function(e){
                e.preventDefault();
                }
                }
            },
            dataLabels: {
              //   enabled: false
                enabled:true,
                style: '{text-align: center}',
                verticalAlign: 'middle',
                distance: 5,
                format: '<span>{point.percentage:.0f} %</span>',
                filter: {
                property:'percentage',
                operator: '>',
                value: '8'
                },
            },
            showInLegend: false
            }
          },
      /*  legend: {
          title: {
              text: '<span style="text-align:center;font-size: 9px; color: #666; font-weight: normal">Retail Mix 2015</span>',
              style: {
                    fontStyle: 'italic'
              }
            },
          layout:'horizontal'
        }, */
        tooltip: {
            formatter:function(){
              //  return '<b>'+Highcharts.numberFormat(this.point.y,0,',',',')+' Acres</b><br/>';
                return '<b>'+this.point.name +'</b><br/>'+Highcharts.numberFormat(this.percentage, 2)+' %';
            }
        },
        credits: {
          enabled: false
        },
        series: [{
          name:'Total',
          id: 'Values',
          innerSize: '40%',
          colors: ['#FFFF00', '#FFA77F','#FF0000','#BEE8FF','#AA66CD','#686868','#FFBEBE','#A80000'],
          data: []
        }]
    };    
    var Labels = ["Civic", "Cultural","Food & Beverage","GAFO","NG & S","Office","Residential","Vacant"],
    counData = [];
    for (var i = 0; i < Values.length; i++){
                counData.push({
                    name: Labels[i],
                    y: Values[i]})
            }
    RetailChart2.series[0].data = counData;
    var chart4 = new Highcharts.Chart(RetailChart2)
    }  
  };
</script>

</body>
</html>
